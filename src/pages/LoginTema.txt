import React, { useState, useEffect } from 'react';
import { View, Text, TextInput, TouchableOpacity, SafeAreaView, ScrollView, StatusBar, StyleSheet } from 'react-native';
import { Picker } from '@react-native-picker/picker';
import LottieView from 'lottie-react-native';
import { useColorScheme } from 'react-native';
import AsyncStorage from '@react-native-async-storage/async-storage'; // Para persistir a escolha de tema

function Login({ navigation }) {
  const systemTheme = useColorScheme(); // Detecta automaticamente o tema do sistema
  const [tema, setTema] = useState(systemTheme); // Tema selecionado pelo usuário (ou tema do sistema por padrão)

  // Atualiza o tema manualmente e armazena no AsyncStorage
  const changeTheme = async (newTheme) => {
    setTema(newTheme);
    await AsyncStorage.setItem('appTheme', newTheme); // Armazena a escolha do usuário
  };

  // Carrega o tema salvo no AsyncStorage (caso exista) quando o componente for montado
  useEffect(() => {
    const loadTheme = async () => {
      const savedTheme = await AsyncStorage.getItem('appTheme');
      if (savedTheme) {
        setTema(savedTheme); // Se o tema foi salvo, usa ele
      } else {
        setTema(systemTheme); // Caso contrário, usa o tema do sistema
      }
    };
    loadTheme();
  }, [systemTheme]);

  // Estilos dinâmicos
  const themeStyles = tema === 'light' ? styles.light : styles.dark;

  return (
    <SafeAreaView style={themeStyles.container}>
      <StatusBar barStyle={tema === 'light' ? 'dark-content' : 'light-content'} backgroundColor={tema === 'light' ? 'white' : '#333'} />
      <ScrollView style={themeStyles.scrollview}>
        <View style={styles.container}>
          <LottieView
            source={require('../images/gifs/Gif.json')}
            autoPlay
            loop
            style={styles.logo}
          />
          <Text style={themeStyles.title}>Bem-Vindo!</Text>
          <Text style={themeStyles.label}>Digite seu nome</Text>
          <TextInput style={themeStyles.input} placeholder="Nome" />
          <Text style={themeStyles.label}>Escolha seu sexo</Text>
          <Picker
            style={themeStyles.picker}
            selectedValue={tema}
            onValueChange={(itemValue) => setTema(itemValue)}
          >
            <Picker.Item label="Selecione..." value="" />
            <Picker.Item label="Masculino" value="masculino" />
            <Picker.Item label="Feminino" value="feminino" />
          </Picker>
            <Text style={themeStyles.label}>Escolha o Tema:</Text>
            <Picker
              selectedValue={tema}
              style={themeStyles.picker}
              onValueChange={(itemValue) => changeTheme(itemValue)} // Altera o tema
            >
              <Picker.Item label="Claro" value="light" />
              <Picker.Item label="Escuro" value="dark" />
            </Picker>
        
          <View>
            <TouchableOpacity
              style={themeStyles.button}
              activeOpacity={0.7}
              onPress={() => navigation.navigate('home')}
            >
              <Text style={themeStyles.buttonText}>ENTRAR</Text>
            </TouchableOpacity>
          </View>

          
        </View>
      </ScrollView>
    </SafeAreaView>
  );
}

const styles = StyleSheet.create({
  container: {
    margin: 20,
    flex: 1,
    justifyContent: 'center',
    alignItems: 'center',
  },
  logo: {
    alignSelf: 'center',
    width: 200,
    height: 200,
  },
  light: {
    container: {
      backgroundColor: 'white',
      flex: 1,
    },
    title: {
      textAlign: 'center',
      fontSize: 52,
      color: '#191919',
      marginVertical: 20,
    },
    label: {
      marginTop: 30,
      color: 'black',
      fontSize: 22,
    },
    input: {
      marginTop: 10,
      fontSize: 18,
      backgroundColor: '#F5F5F6',
      borderRadius: 10,
      paddingHorizontal: 15,
      paddingVertical: 10,
      width: '100%',
    },
    picker: {
      marginTop: 10,
      fontSize: 18,
      backgroundColor: '#F5F5F6',
      borderRadius: 10,
      width: '100%',
    },
    button: {
      marginTop: 40,
      backgroundColor: '#66A5FF',
      paddingVertical: 15,
      paddingHorizontal: 30,
      borderRadius: 10,
      alignItems: 'center',
      width: '80%',
    },
    buttonText: {
      color: 'white',
      fontSize: 24,
      fontWeight: 'bold',
    },
    themeSwitchContainer: {
      marginTop: 30,
      alignItems: 'center',
    },
  },
  dark: {
    container: {
      backgroundColor: '#333',
      flex: 1,
    },
    title: {
      textAlign: 'center',
      fontSize: 52,
      color: 'white',
      marginVertical: 20,
    },
    label: {
      marginTop: 30,
      color: 'white',
      fontSize: 22,
    },
    input: {
      marginTop: 10,
      fontSize: 18,
      backgroundColor: '#555',
      borderRadius: 10,
      paddingHorizontal: 15,
      paddingVertical: 10,
      width: '100%',
      color: 'white',
    },
    picker: {
      marginTop: 10,
      fontSize: 18,
      backgroundColor: '#555',
      borderRadius: 10,
      width: '100%',
      color: 'white',
    },
    button: {
      marginTop: 40,
      backgroundColor: '#66A5FF',
      paddingVertical: 15,
      paddingHorizontal: 30,
      borderRadius: 10,
      alignItems: 'center',
      width: '80%',
    },
    buttonText: {
      color: 'white',
      fontSize: 24,
      fontWeight: 'bold',
    },
    themeSwitchContainer: {
      marginTop: 30,
      alignItems: 'center',
    },
  },
});

export default Login;
